datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model User {
	id		Int	@id @default(autoincrement())
	name 		String?	@unique
	email		String	@unique
	hashedPassword	String
	salt		String
	resetToken	String?
	resetTokenExpiresAt DateTime?
	courses		Course[]
	lessons		Lesson[]
	textbooks	Textbook[]
	textbookSections	TextbookSection[]
	articles	Article[]
	questions	Question[]	
	answers		Answer[]
	choices		Choice[]
	goals		Goal[]
	notebookPages NotebookPage[]
}

model Course {
	id		Int	@id @default(autoincrement())
	user		User	@relation(fields: [userId], references: [id])
	userId		Int
	title		String
	createdAt 	DateTime 	@default(now())
	mark		Int @default(0)
	active 		Boolean @default(true)
	lessons		Lesson[]
	notebookPages 	NotebookPage[]
	textbooks 	Textbook[]
	articles	Article[]
	goals		Goal[]
	questions	Question[]	
}

model Lesson {
	id			Int	@id @default(autoincrement())
	user		User	@relation(fields: [userId], references: [id])
	userId		Int
	course 		Course @relation(fields: [courseId], references: [id])
	courseId 	Int
	title		String	@default("Untitled")
	index		Int?
	notebookPages 	NotebookPage[]
	sections 	SectionOnLesson[]
	articles		ArticleOnLesson[]
	questions	Question[]	
}

model Textbook {
	id		Int 	@id @default(autoincrement())
	user		User	@relation(fields: [userId], references: [id])
	userId		Int
	title		String	@default("Untitled")
	author		String? 
	pages		Int? 	@default(0)
	pageOffset	Int?	
	isbn		String?	
	uploaded	Boolean	@default(false)
	url			String?
	course 		Course 	@relation(fields: [courseId], references: [id])
	courseId 	Int
	sections	TextbookSection[]
}

model TextbookSection {
	id		Int	@id @default(autoincrement())
	user		User	@relation(fields: [userId], references: [id])
	userId		Int
	title		String	@default("Untitled")
	start		Int
	end			Int
	lessons		SectionOnLesson[]
	textbook 	Textbook @relation(fields: [textbookId], references: [id])
	textbookId 	Int
}

model Article {
	id		Int 	@id @default(autoincrement())
	user		User	@relation(fields: [userId], references: [id])
	userId		Int
	title		String	@default("Untitled")
	author		String?
	pages		Int?
	pageOffset	Int?	
	doi 		String?	
	uploaded	Boolean
	url			String?
	course 		Course 	@relation(fields: [courseId], references: [id])
	courseId 	Int
	lessons		ArticleOnLesson[]
}


model SectionOnLesson {
	id			Int 	@id @default(autoincrement())
	lesson 		Lesson @relation(fields: [lessonId], references: [id])
	lessonId 	Int
	section  	TextbookSection @relation(fields: [sectionId], references: [id])
	sectionId 	Int
}

model ArticleOnLesson {
	id			Int 	@id @default(autoincrement())
	lesson 		Lesson @relation(fields: [lessonId], references: [id])
	lessonId 	Int
	article 	Article @relation(fields: [articleId], references: [id])
	articleId 	Int
}

model Question {
	id 		Int 	@id @default(autoincrement())	
	user		User	@relation(fields: [userId], references: [id])
	userId		Int
	question	String
	multiple	Boolean
	answers 	Answer[]
	choices		Choice[]
	lesson 		Lesson @relation(fields: [lessonId], references: [id])
	lessonId 	Int
	course 		Course @relation(fields: [courseId], references: [id])
	courseId 	Int
}

model Answer {
	id 		Int 	@id @default(autoincrement())	
	user		User	@relation(fields: [userId], references: [id])
	userId		Int
	answer		String
	question 	Question @relation(fields: [questionId], references: [id])
	questionId 	Int
}

model Choice {
	id 		Int 	@id @default(autoincrement())	
	user		User	@relation(fields: [userId], references: [id])
	userId		Int
	choice 		String
	question 	Question @relation(fields: [questionId], references: [id])
	questionId 	Int
}

model Goal {
	id 		Int 	@id @default(autoincrement())	
	user		User	@relation(fields: [userId], references: [id])
	userId		Int
	course 		Course 	@relation(fields: [courseId], references: [id])
	courseId 	Int
	completed 	Boolean
	type		String
	goal		Int
	lessonId 	Int
	allLessons	Boolean
}

model NotebookPage {
	id		Int @id @default(autoincrement())
	user		User	@relation(fields: [userId], references: [id])
	userId		Int
	page 		Int 
	words		Int @default(0)
	content		String?
	lesson 		Lesson @relation(fields: [lessonId], references: [id])
	lessonId 	Int
	course 		Course @relation(fields: [courseId], references: [id])
	courseId 	Int
}

